{"compiler":{"version":"0.5.4+commit.9549d8ff"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"stop","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"guy","type":"address"},{"name":"wad","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"},{"name":"_data","type":"bytes"}],"name":"canTransferFrom","outputs":[{"name":"","type":"bool"},{"name":"","type":"bytes1"},{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"owner_","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"},{"name":"_data","type":"bytes"}],"name":"canTransfer","outputs":[{"name":"","type":"bool"},{"name":"","type":"bytes1"},{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"src","type":"address"},{"name":"dst","type":"address"},{"name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"},{"name":"_data","type":"bytes"}],"name":"transferWithData","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"isIssuable","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"guy","type":"address"},{"name":"wad","type":"uint256"}],"name":"mint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"wad","type":"uint256"}],"name":"burn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"name_","type":"bytes32"}],"name":"setName","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"src","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"stopped","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"authority_","type":"address"}],"name":"setAuthority","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_tokenHolder","type":"address"},{"name":"_value","type":"uint256"},{"name":"_data","type":"bytes"}],"name":"redeemFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"guy","type":"address"},{"name":"wad","type":"uint256"}],"name":"burn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"wad","type":"uint256"}],"name":"mint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"dst","type":"address"},{"name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"dst","type":"address"},{"name":"wad","type":"uint256"}],"name":"push","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"src","type":"address"},{"name":"dst","type":"address"},{"name":"wad","type":"uint256"}],"name":"move","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_tokenHolder","type":"address"},{"name":"_value","type":"uint256"},{"name":"_data","type":"bytes"}],"name":"issue","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"start","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"authority","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"guy","type":"address"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"src","type":"address"},{"name":"guy","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_value","type":"uint256"},{"name":"_data","type":"bytes"}],"name":"redeem","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"},{"name":"_data","type":"bytes"}],"name":"transferFromWithData","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"src","type":"address"},{"name":"wad","type":"uint256"}],"name":"pull","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_symbol","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_operator","type":"address"},{"indexed":true,"name":"_to","type":"address"},{"indexed":false,"name":"_value","type":"uint256"},{"indexed":false,"name":"_data","type":"bytes"}],"name":"Issued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_operator","type":"address"},{"indexed":true,"name":"_from","type":"address"},{"indexed":false,"name":"_value","type":"uint256"},{"indexed":false,"name":"_data","type":"bytes"}],"name":"Redeemed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"guy","type":"address"},{"indexed":false,"name":"wad","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"guy","type":"address"},{"indexed":false,"name":"wad","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"authority","type":"address"}],"name":"LogSetAuthority","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"}],"name":"LogSetOwner","type":"event"},{"anonymous":true,"inputs":[{"indexed":true,"name":"sig","type":"bytes4"},{"indexed":true,"name":"guy","type":"address"},{"indexed":true,"name":"foo","type":"bytes32"},{"indexed":true,"name":"bar","type":"bytes32"},{"indexed":false,"name":"wad","type":"uint256"},{"indexed":false,"name":"fax","type":"bytes"}],"name":"LogNote","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"src","type":"address"},{"indexed":true,"name":"guy","type":"address"},{"indexed":false,"name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"src","type":"address"},{"indexed":true,"name":"dst","type":"address"},{"indexed":false,"name":"wad","type":"uint256"}],"name":"Transfer","type":"event"}],"devdoc":{"methods":{"canTransfer(address,uint256,bytes)":{"params":{"_data":"The `bytes _data` allows arbitrary data to be submitted alongside the transfer.","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"},"return":"bool It signifies whether the transaction will be executed or not.byte Ethereum status code (ESC)bytes32 Application specific reason code"},"canTransferFrom(address,address,uint256,bytes)":{"params":{"_data":"The `bytes _data` allows arbitrary data to be submitted alongside the transfer.","_from":"address The address which you want to send tokens from","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"},"return":"bool It signifies whether the transaction will be executed or not.byte Ethereum status code (ESC)bytes32 Application specific reason code"},"isIssuable()":{"details":"If a token returns FALSE for `isIssuable()` then it MUST always return FALSE in the future. If a token returns FALSE for `isIssuable()` then it MUST never allow additional tokens to be issued.","return":"bool `true` signifies the minting is allowed. While `false` denotes the end of minting"},"issue(address,uint256,bytes)":{"details":"It only be called by the token issuer or the operator defined by the issuer. ERC1594 doesn't have have the any logic related to operator but its superset ERC1400 have the operator logic and this function is allowed to call by the operator.","params":{"_data":"The `bytes _data` allows arbitrary data to be submitted alongside the transfer.","_tokenHolder":"The account that will receive the created tokens (account should be whitelisted or KYCed).","_value":"The amount of tokens need to be issued"}},"redeem(uint256,bytes)":{"params":{"_data":"The `bytes _data` it can be used in the token contract to authenticate the redemption.","_value":"The amount of tokens need to be redeemed"}},"redeemFrom(address,uint256,bytes)":{"details":"It is analogy to `transferFrom`","params":{"_data":"The `bytes _data` it can be used in the token contract to authenticate the redemption.","_tokenHolder":"The account whose tokens gets redeemed.","_value":"The amount of tokens need to be redeemed"}},"transferFromWithData(address,address,uint256,bytes)":{"details":"`msg.sender` MUST have a sufficient `allowance` set and this `allowance` must be debited by the `_value`.","params":{"_data":"The `bytes _data` allows arbitrary data to be submitted alongside the transfer. for the token contract to interpret or record. This could be signed data authorising the transfer (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.","_from":"address The address which you want to send tokens from","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"}},"transferWithData(address,uint256,bytes)":{"params":{"_data":"The `bytes _data` allows arbitrary data to be submitted alongside the transfer. for the token contract to interpret or record. This could be signed data authorising the transfer (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"}}}},"userdoc":{"methods":{"canTransfer(address,uint256,bytes)":{"notice":"Transfers of securities may fail for a number of reasons. So this function will used to understand the cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain"},"canTransferFrom(address,address,uint256,bytes)":{"notice":"Transfers of securities may fail for a number of reasons. So this function will used to understand the cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain"},"constructor":"Constructor","isIssuable()":{"notice":"A security token issuer can specify that issuance has finished for the token (i.e. no new tokens can be minted or issued)."},"issue(address,uint256,bytes)":{"notice":"This function must be called to increase the total supply (Corresponds to mint function of ERC20)."},"redeem(uint256,bytes)":{"notice":"This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize using different ways that could be implemented with in the `redeem` function definition. But those implementations are out of the scope of the ERC1594."},"redeemFrom(address,uint256,bytes)":{"notice":"This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize using different ways that could be implemented with in the `redeem` function definition. But those implementations are out of the scope of the ERC1594."},"transferFromWithData(address,address,uint256,bytes)":{"notice":"Transfer restrictions can take many forms and typically involve on-chain rules or whitelists. However for many types of approved transfers, maintaining an on-chain list of approved transfers can be cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder approving a token transfer, and authorised entity provides signed data which further validates the transfer."},"transferWithData(address,uint256,bytes)":{"notice":"Transfer restrictions can take many forms and typically involve on-chain rules or whitelists. However for many types of approved transfers, maintaining an on-chain list of approved transfers can be cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder approving a token transfer, and authorised entity provides signed data which further validates the transfer."}}}},"settings":{"compilationTarget":{"src/ERC1594.sol":"ERC1594"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":false,"runs":200},"remappings":[":/=/",":ds-auth/=lib/ds-token/lib/ds-stop/lib/ds-auth/src/",":ds-auth=lib/ds-token/lib/ds-stop/lib/ds-auth/src/index.sol",":ds-math/=lib/ds-token/lib/ds-math/src/",":ds-math=lib/ds-token/lib/ds-math/src/index.sol",":ds-note/=lib/ds-token/lib/ds-stop/lib/ds-note/src/",":ds-note=lib/ds-token/lib/ds-stop/lib/ds-note/src/index.sol",":ds-stop/=lib/ds-token/lib/ds-stop/src/",":ds-stop=lib/ds-token/lib/ds-stop/src/index.sol",":ds-test/=lib/ds-test/src/",":ds-test=lib/ds-test/src/index.sol",":ds-token/=lib/ds-token/src/",":ds-token=lib/ds-token/src/index.sol",":erc20/=lib/ds-token/lib/erc20/src/",":erc20=lib/ds-token/lib/erc20/src/index.sol"]},"sources":{"lib/ds-token/lib/ds-math/src/math.sol":{"keccak256":"0x13d03a3d8e35f03ae8d99208cd6dbc225234506f628c23546ddb8bda2fa89dde","urls":["bzzr://25ada4352c38af9341a3e72b11354f636ee2af51cad1ec7eb755ffdd36533361"]},"lib/ds-token/lib/ds-stop/lib/ds-auth/src/auth.sol":{"keccak256":"0xea1d7e0d958384fe7fef111a9705a51c86acd6408c3e854bdbe4140a23adf8bd","urls":["bzzr://8a1eada3825355aea021016239b532f6b4f4cf22a7c3a9e8a136848ab179abf9"]},"lib/ds-token/lib/ds-stop/lib/ds-note/src/note.sol":{"keccak256":"0x06b34df5cf7afc722d628e51cb9b135c82ed7400b5b54fcea45d96e7d54e866f","urls":["bzzr://91e955415040a31e9b31bb5d8e0b9ba3ad98f21b73f80e318021b2dfafb1506f"]},"lib/ds-token/lib/ds-stop/src/stop.sol":{"keccak256":"0x0197761cfc2887d1b12002aa6ab0827d1ed3fcab15e88fd8ce60b06eaa415aa4","urls":["bzzr://dc07277c72bb838cda536860090250714edcca57f4da6ccd828a7d2b1ca6b25a"]},"lib/ds-token/lib/erc20/src/erc20.sol":{"keccak256":"0x000fc2c14d5d477eae259d71e7a4cca88dd864afee7a338d141f21f1eb4f9a7b","urls":["bzzr://e4301a08ad0509f034dd07ecdaf32a52d2e671725fa09b797b40e9c63dbcd44d"]},"lib/ds-token/src/base.sol":{"keccak256":"0x6c0296044241a311a279f4a67181a9466d9bb81e1f0b5248fe4445a868a6fa25","urls":["bzzr://38c100058fe8510ab7b9d3ffb9c0cdc05ef6417c43fd79dc94874573a7125c07"]},"lib/ds-token/src/token.sol":{"keccak256":"0x4afbf421bedf75dce415ea250fce93e0b4a1cf366e9170012f7fcb9b6341dccc","urls":["bzzr://92107e034b3191d77da604b73069e2178108c747b4bcce36b34fc770b3430ec5"]},"src/ERC1594.sol":{"keccak256":"0x25a4fdcc89598df6f1af47aa5409caaab8511b244bb604e0869970883fa538d3","urls":["bzzr://74778585b21c5820373248521a582d195e15be1e817d5f2b8662a8b10917dfb7"]},"src/interfaces/IERC1594.sol":{"keccak256":"0xd24805d450aa32341518571915b1383e2d57e61cab844d4f2aac7da0a67cc1ae","urls":["bzzr://728e60c6cf7d061652981b6c58a0bb85b903b85602c33c9d08be23c78753da89"]}},"version":1}